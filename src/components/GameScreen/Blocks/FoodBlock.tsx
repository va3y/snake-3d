// import { MeshProps } from "@react-three/fiber";

// const FoodBlock: React.FC<MeshProps> = (props) => {
//   return (
//     <mesh {...props}>
//       <meshPhongMaterial attach="material" color="green" />
//       <boxGeometry />
//     </mesh>
//   );
// };

// export default FoodBlock;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useTurntable } from "hooks/useTurntable";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
  };
};

export default function FoodBlock(props: JSX.IntrinsicElements["group"]) {
  const ref = useTurntable();
  const { nodes } = useGLTF("/ban.glb") as GLTFResult;

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Cube.geometry}>
        <meshPhongMaterial attach="material" color="#ffe135" />
      </mesh>
    </group>
  );
}

useGLTF.preload("/ban.glb");
